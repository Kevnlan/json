import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:sooqjo/AppBarIcon/drawerpage.dart';
import 'package:sooqjo/AppBarIcon/search.dart';
import 'package:sooqjo/configuration/size_cnofig.dart';
import 'package:sooqjo/models/subcategoriesmodel.dart';
import 'package:http/http.dart' as http;

class Category_Selcted extends StatefulWidget {
  @override
  _Category_SelctedState createState() => _Category_SelctedState();

  Category_Selcted(this.label, this.cover);

  String cover;
  String label;
}

class _Category_SelctedState extends State<Category_Selcted> {
  final GlobalKey<ScaffoldState> _scaffoldKey = new GlobalKey<ScaffoldState>();

  List<String> imagess = [
    "assets/images/categorys/D0EfFnK6fk.png",
    "assets/images/categorys/El9m2ySGx6.png",
    "assets/images/categorys/LrZD61gwnh.png",
    "assets/images/categorys/Ogr05IU9GQ.png",
    "assets/images/categorys/qf72idhqkz.png ",
    "assets/images/categorys/thA2TE4Km2.png",
    "assets/images/categorys/vmwn2yKqtw.png",
    "assets/images/categorys/Z6UrQ5JOPC.png ",
  ];

  void initState() {
    // TODO: implement initState
    super.initState();
    //  _getCategories();
    _myString = _GetSubcategories();
  }

  Future<List<GetSubcategories>> _myString;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        key: _scaffoldKey,
        extendBodyBehindAppBar: true,
        appBar: AppBar(
            elevation: 0,
            backgroundColor: Colors.transparent,
            title: Center(
              child: FittedBox(
                child: Text(
                  "${widget.label}",
                  style: GoogleFonts.elMessiri(
                      fontSize: SizeConfig.heightMultiplier * 3.64,
                      color: Colors.white,
                      fontWeight: FontWeight.bold),
                ),
              ),
            ),
            actions: [searchIcon(context, true)],
            leading: IconButton(
                icon: Image.asset(
                  'assets/images/icons/Asset 16hdpi.png',
                  height: 15,
                  width: 30,
                  color: Colors.white,
                ),
                onPressed: () => _scaffoldKey.currentState.openDrawer())),
        drawer: AppDrawer(),
        body: Container(
          color: Colors.black,
          child: Column(
            mainAxisAlignment: MainAxisAlignment.start,
            children: [
              Container(
                child: Padding(
                  padding: EdgeInsets.only(
                      bottom: SizeConfig.heightMultiplier * 8.75,
                      left: SizeConfig.widthMultiplier * 4.7),
                  child: Align(
                      alignment: Alignment.bottomLeft,
                      child: Text(
                        "${widget.label} Collection",
                        style: GoogleFonts.elMessiri(
                            fontSize: SizeConfig.heightMultiplier * 3.23,
                            color: Colors.white,
                            fontWeight: FontWeight.bold),
                      )),
                ),
                height: SizeConfig.heightMultiplier * 34.64,
                decoration: BoxDecoration(
                  color: Colors.black,
                  image: DecorationImage(
                    image: NetworkImage(widget.cover),
                    fit: BoxFit.cover,
                  ),
                ),
              ),
              Expanded(
                child: Container(
                  decoration: BoxDecoration(
                    color: Colors.white,
                    borderRadius: BorderRadius.only(
                      topLeft: Radius.circular(50.0),
                      topRight: Radius.circular(50.0),
                    ),
                  ),
                  child: FutureBuilder(
                      future: _myString,
                      // ignore: missing_return
                      builder: (context, snapshots) {
                        if (snapshots.hasError)
                          return Text(
                            "Error Occurred",
                          );
                        switch (snapshots.connectionState) {
                          case ConnectionState.waiting:
                            return Center(
                                child: Row(
                              mainAxisAlignment: MainAxisAlignment.center,
                              children: [
                                CircularProgressIndicator(),
                                Text(
                                  "   Loading ...",
                                  style: TextStyle(
                                      fontSize:
                                          SizeConfig.heightMultiplier * 4.39,
                                      color: Colors.white),
                                )
                              ],
                            ));
                          case ConnectionState.done:
                            return ListView.builder(
                                itemCount:
                                    prodects[0].success.subcategories.length,
                                itemBuilder: (BuildContext context, int index) {
                                  return Padding(
                                    padding: EdgeInsets.only(
                                        top: SizeConfig.heightMultiplier * 1.73,
                                        right:
                                            SizeConfig.widthMultiplier * 3.64,
                                        left:
                                            SizeConfig.widthMultiplier * 3.64),
                                    child: Container(
                                      height:
                                          SizeConfig.heightMultiplier * 23.1,
                                      width: MediaQuery.of(context).size.width,
                                      child: Stack(
                                        children: [
                                          Align(
                                              alignment: Alignment.centerLeft,
                                              child: ClipRRect(
                                                  borderRadius:
                                                      BorderRadius.all(
                                                    Radius.circular(50.0),
                                                  ),
                                                  child: Container(
                                                    height: SizeConfig
                                                            .heightMultiplier *
                                                        19.63,
                                                    width: SizeConfig
                                                            .widthMultiplier *
                                                        41.36,
                                                    decoration: BoxDecoration(
                                                      color: Colors.black,
                                                      image: DecorationImage(
                                                        image: AssetImage(
                                                            imagess[index]),
                                                        fit: BoxFit.fitHeight,
                                                      ),
                                                    ),
                                                  ))),
                                          Positioned(
                                              top: SizeConfig.heightMultiplier *
                                                  6.92,
                                              left: SizeConfig.widthMultiplier *
                                                  43.7,
                                              child: Column(
                                                mainAxisAlignment:
                                                    MainAxisAlignment.center,
                                                crossAxisAlignment:
                                                    CrossAxisAlignment.start,
                                                children: [
                                                  FittedBox(
                                                    child: Text(
                                                        "${prodects[0].success.subcategories[index].name}",
                                                        style: TextStyle(
                                                            color: Colors.black,
                                                            fontSize: SizeConfig
                                                                    .heightMultiplier *
                                                                2.77)),
                                                  ),
                                                  SizedBox(
                                                    height: SizeConfig
                                                            .heightMultiplier *
                                                        1.15,
                                                  ),
                                                  Text(
                                                      "${prodects[0].success.subcategories[index].id} Id",
                                                      style: TextStyle(
                                                          color: Colors.black,
                                                          fontSize: SizeConfig
                                                                  .heightMultiplier *
                                                              2.07)),
                                                ],
                                              )),
                                          Positioned(
                                              top: SizeConfig.heightMultiplier *
                                                  8.66,
                                              right:
                                                  SizeConfig.widthMultiplier *
                                                      2.433,
                                              child: Icon(
                                                Icons.arrow_forward_ios,
                                                size: 20,
                                              )),
                                        ],
                                      ),
                                    ),
                                  );
                                });
                          case ConnectionState.none:
                            // TODO: Handle this case.
                            break;
                          case ConnectionState.active:
                            // TODO: Handle this case.
                            break;
                        }
                      }),
                ),
              ),
            ],
          ),
        ));
  }

  List<GetSubcategories> prodects = [];

  /*
  Padding(
                          padding: EdgeInsets.only( top: SizeConfig.heightMultiplier * 1.73 , right: SizeConfig.widthMultiplier * 3.64 , left: SizeConfig.widthMultiplier * 3.64 ),
                          child: Container(
                            height: SizeConfig.heightMultiplier * 23.1,
                            width: MediaQuery.of(context).size.width,
                            child: Stack(
                              children: [
                                Align(
                                    alignment: Alignment.centerLeft,
                                    child: ClipRRect(
                                        borderRadius: BorderRadius.all(
                                          Radius.circular(50.0),
                                        ),
                                        child: Container(
                                          height: SizeConfig.heightMultiplier * 19.63,
                                          width: SizeConfig.widthMultiplier * 41.36,
                                          decoration: BoxDecoration(
                                            color: Colors.black,
                                            image: DecorationImage(
                                              image: AssetImage(
                                                  "assets/images/categorys/D0EfFnK6fk.png"),
                                              fit: BoxFit.fitHeight,
                                            ),
                                          ),
                                        ))),
                                Positioned(
                                    top: SizeConfig.heightMultiplier * 6.92,
                                    left: SizeConfig.widthMultiplier * 43.7,
                                    child: Column(
                                      mainAxisAlignment:
                                      MainAxisAlignment.center,
                                      children: [
                                        Text("Sweets",
                                            style: TextStyle(
                                                color: Colors.black,
                                                fontSize: SizeConfig.heightMultiplier * 2.77)),
                                        SizedBox(height: SizeConfig.heightMultiplier * 1.15 ,) ,
                                        Text("150 Items",
                                            style: TextStyle(
                                                color: Colors.black,
                                                fontSize: SizeConfig.heightMultiplier * 2.07)),
                                      ],
                                    )),
                                Positioned(
                                    top: SizeConfig.heightMultiplier * 8.66,right: SizeConfig.widthMultiplier * 2.433,
                                    child: Icon(
                                      Icons.arrow_forward_ios,
                                      size: 20,
                                    )),
                              ],
                            ),
                          ),
                        ),
   */

  Future<List<GetSubcategories>> _GetSubcategories() async {
    var url =
        "my API";
    Map<String, String> headers = {"Content-type": "application/json"};
    var response = await http.post(url, headers: headers);

    print("response.statusCode= ${response.statusCode}");
    final jsonData = json.decode(response.body);

    if (response.statusCode == 200) {
      print(response.body.length);

      prodects.add(GetSubcategories.fromJson(jsonData));

      print("2");

      var _selected = prodects[0];

      var _longitude = _selected.success.subcategories.length;

      print("3");

      print("_selected = ${_longitude}");
      return prodects;
    }
  }
}
